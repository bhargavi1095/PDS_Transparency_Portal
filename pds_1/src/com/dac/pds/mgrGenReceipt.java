package com.dac.pds;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.Date;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;





/**
 * Servlet implementation class mgrGenReceipt
 */
@WebServlet("/mgrGenReceipt")
public class mgrGenReceipt extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	
	
	
	// path where file will be saved
	//private static String FILE = "C:/Users/ANKIT KAUSHAL/Desktop/Receipt.pdf";
    // setting font , size etc.
	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public mgrGenReceipt() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		//doGet(request, response);
		
		// setting the price for the commodities
		int priceWheat = 3;
		int priceRice = 5;
		int priceOil = 10;
		
		
		// getting the quantity of commodities allocated
		int wheat = Integer.parseInt(request.getParameter("wheat"));
		int rice = Integer.parseInt(request.getParameter("rice"));
		int oil = Integer.parseInt(request.getParameter("oil"));
		
		
		// calculating price
		double wPrice = wheat * priceWheat;
		double rPrice = rice * priceRice;
		double oPrice = oil * priceOil;
		
		// getting other details to be printed
		String pds = request.getParameter("pds");
		String aadhaar = request.getParameter("aadhaar");
		String ration = request.getParameter("ration");
		String mobile = request.getParameter("mobile");
		String category = request.getParameter("category");
		String depot = request.getParameter("depot");
		
		
		
		// FILE
		
		 String FILE = "C:/Users/Kishan/Desktop/Receipt"+aadhaar+".pdf";
		
		
		
		///////////////////////////////////////////////////////////////////////////
		// creating document for receipt
		///////////////////////////////////////////////////////////////////////////
		try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            
            // adding metadata to the pdf
            document.addTitle("PDS Receipt");
            document.addSubject("Using iText");
            document.addKeywords("Java, PDF, iText");
            document.addAuthor("PDS Manager");
            document.addCreator("Depot Manager");
            
            
            
            
            // adding title page
            
            Paragraph preface = new Paragraph();
            

            // Adding a header
            preface.add(new Paragraph("PDS Receipt", catFont));


            // Will create: Report generated by: _name, _date
            preface.add(new Paragraph(
                    "Receipt generated by: " + "PDS Portal" + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                    smallBold));

            preface.add(new Paragraph(
                    "This is the receipt generated after successful allocation of ration.",smallBold));
            
            // adding details of customer to the file
            
            preface.add(new Paragraph(
                     "To "
            +"Aadhaar No. : "+aadhaar,smallBold));
            
            preface.add(new Paragraph(     
           "PDS ID : "+pds,smallBold));
            
            preface.add(new Paragraph(     
                    "Ration ID : "+ration,smallBold));
            
            preface.add(new Paragraph(     
                    "Category : "+category,smallBold));
            
            preface.add(new Paragraph(     
                    "Mobile No. : "+mobile,smallBold));
            
            preface.add(new Paragraph(     
                    "from Depot : "+depot,smallBold));
            

            
            document.add(preface);
            
            // Start a new page
            document.newPage();
            
            
            
            // adding content
            
            Anchor anchor = new Anchor("Description:", catFont);
            anchor.setName("Ration Receipt with price:");

            // Second parameter is the number of the chapter
            Chapter catPart = new Chapter(new Paragraph(anchor), 1);

            Paragraph subPara = new Paragraph("Commodities given ", subFont);
            Section subCatPart = catPart.addSection(subPara);
           

                  // add a table
            
            PdfPTable table = new PdfPTable(3);

            // t.setBorderColor(BaseColor.GRAY);
            // t.setPadding(4);
            // t.setSpacing(4);
            // t.setBorderWidth(1);

            PdfPCell c1 = new PdfPCell(new Phrase("Quantity (in Kg)"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);

            c1 = new PdfPCell(new Phrase("Description"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);

            c1 = new PdfPCell(new Phrase("Price (in INR/Rs.)"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            table.setHeaderRows(1);

            table.addCell(String.valueOf(wheat));
            table.addCell("Wheat");
            table.addCell(String.valueOf(wPrice));
            table.addCell(String.valueOf(rice));
            table.addCell("Rice");
            table.addCell(String.valueOf(rPrice));
            table.addCell(String.valueOf(oil));
            table.addCell("Oil");
            table.addCell(String.valueOf(oPrice));
            
            
            table.addCell("Total : ");
            table.addCell("");
            table.addCell(String.valueOf(wPrice+rPrice+oPrice));
            

            subCatPart.add(table);

            

            // now add all this to the document
            document.add(catPart);

            // forwarding to Success page
            request.setAttribute("error", "your receipt has been downloaded on Desktop");
			RequestDispatcher rd2 = request.getRequestDispatcher("mgr_Success.jsp");
			rd2.forward(request, response);
            
            // closing document
            document.close();
            
            
            // for msg sending the total amount to be paid
            
            
            try {
            	String total = String.valueOf(wPrice+rPrice+oPrice);
      			
      			
            
      			URL url = new URL("https://smsapi.engineeringtgr.com/send/?Mobile=7023222688&Password=Abc123&Message=Amount:"+total+"&To="+mobile+"&Key=shreyGBIDhzjFJT2EUtXkq");
    	           
      			 URLConnection urlcon = url.openConnection();
               // InputStream stream = urlcon.getInputStream();
                BufferedReader reader = new BufferedReader(new InputStreamReader(urlcon.getInputStream()));
                
                int i;
                String res="";
                while ((i = reader.read()) != -1) {
                    res+=(char)i;
                }
                
                // if msg successfully sent
                if(res.contains("success")){
                	
                    // 
                   
                }
                // if msg not sent successfully
                else
                {
                    // 
                    
                   
                }
            } catch (IOException e) {
                System.out.println(e.getMessage());
                
            }
            
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
		
		
	}
	
}


